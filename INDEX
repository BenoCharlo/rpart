labels.rpart             Create Split Labels For an Rpart Object
meanvar.rpart            Mean-Variance Plot for an Rpart Object
model.frame.rpart        Create a Model Frame for fitting an Rpart Object
na.rpart                 Handles Missing Values in an Rpart Object
path.rpart               Follow Paths to Selected Nodes of an Rpart
                         Object
plot.rpart               Plot an Rpart Object
plotcp                   Plot a Complexity Parameter Table for an Rpart
                         Fit
post.rpart               PostScript Presentation Plot of an Rpart Object
predict.rpart            Predictions from a Fitted Rpart Object
print.rpart              Print an Rpart Object
printcp                  Displays CP table for Fitted Rpart Object
prune.rpart              Cost-complexity Pruning of an Rpart Object
residuals.rpart          Residuals From a Fitted Rpart Object
                         Recursive Partitioning and Regression Trees
rpart.anova              Set up for `anova' Method for an Rpart Model
rpart.branch             Draws horseshoes - left child, up over, down to
                         right child
rpart.class              Set up for `class' Method for an Rpart Model
                         Control for Rpart Models.
rpart.exp                Set up for `exp' Method for an Rpart Model
rpart.matrix             Creates model matrix from call to `rpart'.
rpart.object             Recursive Partitioning and Regression Trees
                         Object
rpart.poisson            Set up for `poisson' Method for an Rpart Model
rpartco                  Calculate Plotting Coordinates for Nodes of an
                         Rpart Object
                         Plots the Approximate R-Square for the Different
                         Splits
snip.rpart               Snip Subtrees of an Rpart Object
snip.rpart.mouse         Internal function called from `snip.rpart'
summary.rpart            Summarize a Fitted Rpart Object
text.rpart               Place Text on a Dendrogram
                         Return Cross-Validated Predictions

Original README:

This is the first release (with fixes of bugs) of the rpart package for Splus.

Terry M Therneau
Beth Atkinson
Mayo Clinic

Copyright Mayo Foundation for Medical Education and Research 1997, all
rights reserved.  Permission is granted for unlimited distribution for
noncommercial use.

Problems/comments/suggestions should be reported to atkinson@mayo.edu

#############################################################################


### What it does:

    Splitting rules -- Class: for classification, with priors and losses
	                      - specify 'gini' or 'information' 
	    	       Anova: identical to the 'regression' of tree()
		       Poisson: good for events/person-years data
		       Exp: best choice for survival data

    Surrogate splits -- in the full generality of the CART book.  This means
		        that the code can deal with missing X values.

    Provides a full, detailed listing that includes competitor splits,
		surrogate splits, sizes, improvements, complexity
		parameter, etc.  Looks a lot like CART output.

    Built-in cross-validation code -- This makes it faster.
    NOTE: If you have a large dataset you may want to turn the 
	  cross-validation and surrogate options off !!
    

    Functions similar to tree() -- Most methods are implemented.
               Tree functions that DON'T currently work include:

		 burl.tree
		 cv.tree
		 data.tree
		 hist.tree
		 rug.tree
		 tile.tree
               
               unless you use as.tree() first (transforms rpart object
	       variables to tree object variables with appropriate
	       names). 

    List of functions that are most useful --

    rpart            - main function call, using Splus modelling language
    print.rpart	     - print a short summary of the rpart fit (tree) 
    summary.rpart    - prints a detailed summary of the rpart fit
    printcp          - prints summary table of cross-validation
    predict.rpart    - calculates predicted values based on rpart fit
    residuals.rpart  - calculates residuals from rpart fit 
    xpred.rpart	     - cross-validation for each split 
		              
    plot.rpart       - create a tree plot on current graphical device
    text.rpart	     - add text labels to the tree plot
    prune.rpart      - prune off specified subtrees from given rpart object
    post.rpart	     - create a postscript file containing a 'pretty' tree 
    meanvar.rpart    - plots the mean variance of each node 
    rsq.rpart        - plot of the rsquare improvement for each split
    snip.rpart       - prune a tree located on current graphical device
    plotcp           - visual representation of cross-validation results


### Stability: The C code has been available for 4+ years now on
    statlib (see the 'rpart' package from 'general').  This stands for
    Recursive PARTioning, as the word CART has been copyrighted.

    The Splus code has been in use here at Mayo for 3+ years and is
    quite solid.


### Adaptability: The underlying C code was built with extensions in
    mind.  It's relatively easy to add a new method.


### Further information: A 50+ page technical report (stored as
    postscript) is included in the directory Manuscript).  It shows
    examples and explains in detail some of the features of rpart
    (techrep.ps). A condensed version (just examples and description
    of functions) is included as well (minitech.ps)
